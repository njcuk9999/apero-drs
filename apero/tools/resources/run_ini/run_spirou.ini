# Note this is a example file
#   Please copy this before making changes
# FOR USE WITH VERSION {VERSION} ({DATE})

# -----------------------------------------------------------------------------
# Core variables
# -----------------------------------------------------------------------------
# Define run name
RUN_NAME = {RUN_NAME}

# Define whether to send email (required yagmal)
#   to install yagmail: pip install yagmail
# Note this currently is untested
SEND_EMAIL = {SEND_EMAIL}

# Define email address to send/recieve (send to self)
# Note this currently is untested
EMAIL_ADDRESS = {EMAIL_ADDRESS}

# Define single observation directory (for all nights to "All")
RUN_OBS_DIR = {RUN_OBS_DIR}

# Define observation directories to exclude ("None" means no filter)
#    EXCLUDE_OBS_DIRS = 2018-07-31, 2018-08-05, 2018-12-18, 2018-12-19, 2019-01-17
EXCLUDE_OBS_DIRS = {EXCLUDE_OBS_DIRS}
# Define observation directories to include ("All" means no filter)
#    INCLUDE_OBS_DIRS = 2018-07-31, 2018-08-01, 2018-08-02, 2018-08-03
INCLUDE_OBS_DIRS = {INCLUDE_OBS_DIRS}

# Define a pi name list for filtering by ("All" means no filter)
PI_NAMES = {PI_NAMES}

# define reference observation directory
MASTER_OBS_DIR = {MASTER_OBS_DIR}

# Number of cores (if negative uses N-ABS(CORES), if zero uses N-1 cores)
CORES = {CORES}

# Stop on exception
STOP_AT_EXCEPTION = {STOP_AT_EXCEPTION}

# Run in test mode (does not run codes)
TEST_RUN = {TEST_RUN}

# Whether to process engineering data
USE_ENGINEERING = {USE_ENGINEERING}

# Whether this is a trigger run
TRIGGER_RUN = {TRIGGER_RUN}

# Use odometer reject list
USE_REJECTLIST = {USE_REJECTLIST}

# Recalculate templates if template already exists
RECAL_TEMPLATES = {RECAL_TEMPLATES}

# Update object database from googlesheet - only recommended if doing a
#    full reprocess with all data (will cause inconsistencies if googlesheet
#    has been updated and you are not reprocessing all new data)
UPDATE_OBJ_DATABASE = {UPDATE_OBJ_DATABASE}

# Update reject database from googlesheet
UPDATE_REJECT_DATABASE = {UPDATE_REJECT_DATABASE}

# Update the index database. WARNING only do this if precheck or a previous
#   apero_processing has been run. This will result in bad things if the
#   index database is not update to date.
UPDATE_INDEX_DATABASE = {UPDATE_INDEX_DATABASE}

# Select which databases to update. WARNING. You must be 100% sure that
#   databases left out of this list are up to date, otherwise APERO will
#   fail in bad ways. Options are "All", or any combination of the following:
#   "raw", "tmp', "red", "out"
UPDATE_IDATABASE_NAMES = {UPDATE_IDATABASE_NAMES}

# -----------------------------------------------------------------------------
# Define what to run

# Note not all of these are used by specific sequences so check the sequences
#    to know which ones are used by your sequence
# -----------------------------------------------------------------------------
{RUN_TEXT}

# -----------------------------------------------------------------------------
# Define what to skip (if files found)
# -----------------------------------------------------------------------------
{SKIP_TEXT}

# -----------------------------------------------------------------------------
# Define what to filters to have
# -----------------------------------------------------------------------------
# set which telluric targets to use (For all tellluric stars All)
#    in make telluric process (MKTELLU*)
TELLURIC_TARGETS = {TELLURIC_TARGETS}

# set which science targets to use in EXTRACT_ALL and FIT_TELLU
SCIENCE_TARGETS = {SCIENCE_TARGETS}

# -----------------------------------------------------------------------------
# Run information
# -----------------------------------------------------------------------------
#
#   Format:
#
#   id##### = command
#
#   Must start with "id" followed by a number
#     The number identifies the order to process in
#
#   If command is a sequence will process all in defined sequence
#      valid sequences are:
#           pp_seq, pp_seq_opt, full_seq,
#           limited_seq, ref_seq, calib_seq,
#           tellu_seq, science_seq, eng_seq
{SEQUENCE_TEXT}





