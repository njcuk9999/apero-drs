# Note this is a example file
#   Please copy this before making changes
# FOR USE WITH VERSION 0.7.225 (2022-04-13)

# -----------------------------------------------------------------------------
# Core variables
# -----------------------------------------------------------------------------
# Define run name
RUN_NAME = Run master_calib_run

# Define whether to send email (required yagmal)
#   to install yagmail: pip install yagmail
# Note this currently is untested
SEND_EMAIL = False

# Define email address to send/recieve (send to self)
# Note this currently is untested
EMAIL_ADDRESS = None

# Define single observation directory (for all nights to "All")
RUN_OBS_DIR = m20210605

# Define observation directories to exclude ("None" means no filter)
#    EXCLUDE_OBS_DIRS = 2018-07-31, 2018-08-05, 2018-12-18, 2018-12-19, 2019-01-17
EXCLUDE_OBS_DIRS = All
# Define observation directories to include ("All" means no filter)
#    INCLUDE_OBS_DIRS = 2018-07-31, 2018-08-01, 2018-08-02, 2018-08-03
INCLUDE_OBS_DIRS = All

# Define a pi name list for filtering by ("All" means no filter)
PI_NAMES = All

# define master observation directory
MASTER_OBS_DIR = m20210605

# Number of cores (if negative uses N-ABS(CORES), if zero uses N-1 cores)
CORES = 5

# Stop on exception
STOP_AT_EXCEPTION = False

# Run in test mode (does not run codes)
TEST_RUN = False

# Whether to process engineering data
USE_ENGINEERING = False

# Whether this is a trigger run
TRIGGER_RUN = False

# Use odometer reject list
USE_REJECTLIST = True

# Recalculate templates if template already exists
RECAL_TEMPLATES = True

# Update object database from googlesheet - only recommended if doing a
#    full reprocess with all data (will cause inconsistencies if googlesheet
#    has been updated and you are not reprocessing all new data)
UPDATE_OBJ_DATABASE = False

# Update reject database from googlesheet
UPDATE_REJECT_DATABASE = True

# Update the index database. WARNING only do this if precheck or a previous
#   apero_processing has been run. This will result in bad things if the
#   index database is not update to date.
UPDATE_INDEX_DATABASE = True

# Select which databases to update. WARNING. You must be 100% sure that
#   databases left out of this list are up to date, otherwise APERO will
#   fail in bad ways. Options are "All", or any combination of the following:
#   "raw", "tmp', "red", "out"
UPDATE_IDATABASE_NAMES = All

# -----------------------------------------------------------------------------
# Define what to run

# Note not all of these are used by specific sequences so check the sequences
#    to know which ones are used by your sequence
# -----------------------------------------------------------------------------

# Run the preprocessing recipes
RUN_PPM = True
RUN_PP_CAL = True
RUN_PP_SCI = False
RUN_PP_TEL = False
RUN_PP_HC1HC1 = False
RUN_PP_FPFP = False
RUN_PP_FF = False
RUN_PP_DFP = False
RUN_PP_SKY = False
RUN_PP_LFC = False
RUN_PP_LFCFP = False
RUN_PP_FPLFC = False

# Run the master calibration recipes
RUN_DARKM = True
RUN_BADM = True
RUN_LOCMB = True
RUN_LOCMA = True
RUN_SHAPEM = True
RUN_SHAPELM = True
RUN_FLATM = True
RUN_LEAKM = True
RUN_WAVEM = True


# -----------------------------------------------------------------------------
# Define what to skip (if files found)
# -----------------------------------------------------------------------------

# Skip the preprocessing recipes
SKIP_PPM = True
SKIP_PP_CAL = True
SKIP_PP_SCI = True
SKIP_PP_TEL = True
SKIP_PP_HC1HC1 = True
SKIP_PP_FPFP = True
SKIP_PP_FF = True
SKIP_PP_DFP = True
SKIP_PP_SKY = True
SKIP_PP_LFC = True
SKIP_PP_LFCFP = True
SKIP_PP_FPLFC = True

# Skip the master calibration recipes
SKIP_DARKM = True
SKIP_BADM = True
SKIP_LOCMB = True
SKIP_LOCMA = True
SKIP_SHAPEM = True
SKIP_SHAPELM = True
SKIP_FLATM = True
SKIP_LEAKM = True
SKIP_WAVEM = True


# -----------------------------------------------------------------------------
# Define what to filters to have
# -----------------------------------------------------------------------------
# set which telluric targets to use (For all tellluric stars All)
#    in make telluric process (MKTELLU*)
TELLURIC_TARGETS = All

# set which science targets to use in EXTRACT_ALL and FIT_TELLU
SCIENCE_TARGETS = All

# -----------------------------------------------------------------------------
# Run information
# -----------------------------------------------------------------------------
#
#   Format:
#
#   id##### = command
#
#   Must start with "id" followed by a number
#     The number identifies the order to process in
#
#   If command is a sequence will process all in defined sequence
#      valid sequences are:
#           pp_seq, pp_seq_opt, full_seq,
#           limited_seq, master_seq, calib_seq,
#           tellu_seq, science_seq, eng_seq

id00000 = pp_seq_opt
id00001 = master_seq






