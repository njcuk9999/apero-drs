# Note this is a example file
#   Please copy this before making changes

# -----------------------------------------------------------------------------
# Core variables
# -----------------------------------------------------------------------------
# Define run name
RUN_NAME = "Mini Run"

# Define whether to send email (required yagmal)
#   to install yagmail: pip install yagmail
# Note this currently is untested
SEND_EMAIL = False

# Define email address to send/recieve (send to self)
# Note this currently is untested
EMAIL_ADDRESS = None

# Define night name (for multiple set to None)
NIGHTNAME = None

# Define black list of night names (None means no filter)
#    BNIGHTNAMES = 2018-07-31, 2018-08-05, 2018-12-18, 2018-12-19, 2019-01-17
BNIGHTNAMES = None
# Define white list of night names (None means no filter)
#    WNIGHTNAMES = 2018-07-31, 2018-08-01, 2018-08-02, 2018-08-03
WNIGHTNAMES = None

# Define a pi name list for filtering by (None means no filter)
PI_NAMES = None

# define master night
MASTER_NIGHT = 2019-04-20

# Number of cores
CORES = 5

# Stop on exception
STOP_AT_EXCEPTION = False

# Run in test mode (does not run codes)
TEST_RUN = False

# Whether to process engineering data
ENGINEERING = False

# Whether this is a trigger run
TRIGGER_RUN = False

# -----------------------------------------------------------------------------
# Define what to reset

# !!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!
#     These will delete all files
# !!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!
# -----------------------------------------------------------------------------
# Switch to allow prompt resets (should be set to False unless sure)
RESET_ALLOWED = False

# -----------------------------------------------------------------------------
# Define what to run

# Note not all of these are used by specific sequences so check the sequences
#    to know which ones are used by your sequence
# -----------------------------------------------------------------------------
# Run the preprocessing recipes
RUN_PP_SCI = True
RUN_PP_CAL = False
RUN_PP_TEL = False

# Run the extraction recipes
RUN_EXTOBJ = True

# Run the leak correction recipes
RUN_LEAKOBJ = True

# Run the fit telluric recipes
RUN_FTELLU1 = True
RUN_FTELLU2 = True
RUN_FTELLU3 = True

# Run the CCF
RUN_CCF = True

# -----------------------------------------------------------------------------
# Define what to skip (if files found)
# -----------------------------------------------------------------------------
# Skip preprocessing recipes if file(s) exist
SKIP_PP_SCI = True
SKIP_PP_CAL = False
SKIP_PP_TEL = False

# Skip extraction recipes if file(s) exist
SKIP_EXTOBJ = False

# Skip the leak correction recipes
SKIP_LEAKOBJ = False

# Skip fit telluric recipes if file(s) exist
SKIP_FTELLU1 = False
SKIP_FTELLU2 = False
SKIP_FTELLU3 = False

# Skip CCF recipes
SKIP_CCF = False

# -----------------------------------------------------------------------------
# Define what to filters to have
# -----------------------------------------------------------------------------
# set which telluric targets to use (None = All) in EXTRACT_TELLU and MK_TELLU
TELLURIC_TARGETS = None

# set which science targets to use in EXTRACT_ALL and FIT_TELLU
# SCIENCE_TARGETS = Gl699, Gl15A
# SCIENCE_TARGETS = HD189733, GJ1002
# SCIENCE_TARGETS = TOI-442, Gl436, Gl699, Gl15A, HD189733, GJ1002, GJ1214, Trappist-1
SCIENCE_TARGETS = AUMic

# -----------------------------------------------------------------------------
# Run information
# -----------------------------------------------------------------------------
#
#   Format:
#
#   id##### = command
#
#   Must start with "id" followed by a number
#     The number identifies the order to process in
#
#   If command is a sequence will process all in defined sequence
#      valid sequences are:
#           pp_seq, pp_seq_opt, full_seq,
#           limited_seq, master_seq, calib_seq,
#           tellu_seq, science_seq, eng_seq

# pre-processing
id00000 = pp_seq_opt
id00001 = science_seq




