# Update Note Summary - Version 0.6.129

Date: 2020-07-29

## Updates since Version 0.6.099 - 0.6.101

- Tellurics
    - fixed bug that took all tellurics from disk (now taken just from telluDB)
    - added EA pre-cleaning
    - added EA OH line cleaning

- Extraction and BERV
    - update crossmatch to fix bug going to top row (fixed?)

- CCF
    - fix problems with infs in plotting and infs in headers

- Processing
    - SCIENCE_TARGETS and TELLURIC_TARGETS now both take 'All' as an argument
    - how we skip runs is now based on log.fits run string (will skip identical strings of required arguments)
    - when night blacklist/whitelist in use do not scan all directories

- General
    - files that have been combined now save to disk and update filename
        - i.e. files = 12345,12346,12347,12348 --> 1234F5T8
        - read as {1234} from 5 to 8
        - will eventually be replaced with checksum based on input arguments
    - os.walk should now follow symbolic links
    - Better more consistent cleaning of OBJNAME
    - added --plot=-1 mode to stop plotting summary plot (not recommended)
    - added 2D FP quality control (to remove bad images)
    - update run.ini files and added complete_run.ini and other_run.ini (examples of more sequences)

- Flat/Blaze
    - try re-fitting blaze without bounds when having bounds fails

- Preprocessing
    - now allow processing of LFC_FP files
    - add checks that basic SPIRou header keys exist - and exit gracefully


## Still to do:
    - polar code update
    - Implement database instead of text/fits files for databases
        - index.fits, log.fits, object database, calibDB, telluDB
    - Blacklist odometer codes
    - Move data to user files + download / host not from github
    - move all fits-images to start in extension 1 (not 0)
    - add option to set template for mk_tellu and fit_tellu from args
    - create script to get custom config (larger list of constants)
    - add plot modes 3 and 4
        - `plot== 3` (all debug plots shown) and `plot==4` (all debug plots saved) modes
    - make code to check constants/keywords usage (function usage)
    - separate warning messages into codes 10-000-00000 and 20-000-00000
        - codes 20-000-00000 for trigger to catch
    - go through all summary plots and decide which plots, write figure captions, improve plots, write quality control description, decide which header keys to print
    - add all functions doc strings + display func for all functions
    - make classes picklable and then switch from multiprocessing.pool to spawn
    - NIRPS implementation of cal_wave onwards
    - EA masks from templates
    - cal_drift recipe?

## To do later:
    - implement persistence correction
    - CCF wrapper using weighting/sanitise/bisector etc?
    - propagate uncertainies / flags for NaNs
    - proper SNR calculation
    - integrate CFHT outputs input drs
    - write documentation
    - write paper

## Known issues:
    - Locking of files means using >5 cores slows down a lot (fix with database)
        - if locking is big problem use only 1 core
    - Weird residuals left in order_profile after dark_flat (loc)
    - Calibrations switch over at different points from PM to AM calibrations
        - should really only use "older"
    - NIRPS breaks in shape
